

// Pull Code
///-------------------
node {
 checkout poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/debian']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch', localBranch: 'debian']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/richnou/odfi-manager.git']]]
}


stage("Debian Source Package") {
    
    node("debian") {
        sh "make -f Makefile.debian deb-src"
        archiveArtifacts artifacts: ".deb/*.dsc,.deb/*.changes,.deb/*.xy", onlyIfSuccessful: true
    }
}

architecture="amd64"


// Debian
//---------------------
stage("Oldstable (Jessie)") {

    distribution="oldstable"

    node("debian") {
        sh "DISTRIBUTION=$distribution ARCHITECTURE=$architecture MIRRORSITE=http://ftp.de.debian.org/debian/  make -f Makefile.debian deb-build"
        archiveArtifacts artifacts: ".deb/$distribution/$architecture/*.deb", onlyIfSuccessful: true
    }
}


stage("Stable") {

    distribution="stable"

    node("debian") {
        sh "DISTRIBUTION=$distribution ARCHITECTURE=$architecture MIRRORSITE=http://ftp.de.debian.org/debian/  make -f Makefile.debian deb-build"
        archiveArtifacts artifacts: ".deb/$distribution/$architecture/*.deb", onlyIfSuccessful: true
    }
}


stage("Testing") {
    distribution="testing"
    node("debian") {
        sh "DISTRIBUTION=$distribution ARCHITECTURE=$architecture MIRRORSITE=http://ftp.de.debian.org/debian/ make -f Makefile.debian deb-build"
        archiveArtifacts artifacts: ".deb/$distribution/$architecture/*.deb", onlyIfSuccessful: true
    }
}

/*
// Ubuntu
//-----------
mirrorSite="http://nova.clouds.archive.ubuntu.com/ubuntu/"
stage("Ubuntu Trusty (14.04.5 LTS)") {
    distribution="trusty"
    node("debian") {
        sh "DISTRIBUTION=$distribution ARCHITECTURE=$architecture MIRRORSITE=$mirrorSite make deb-build"
        archiveArtifacts artifacts: ".deb/$distribution/$architecture/*.deb", onlyIfSuccessful: true
    }
}
stage("Ubuntu Xenial (16.04 LTS)") {
    distribution="xenial"
    node("debian") {
        sh "DISTRIBUTION=$distribution ARCHITECTURE=$architecture MIRRORSITE=$mirrorSite make deb-build"
        archiveArtifacts artifacts: ".deb/$distribution/$architecture/*.deb", onlyIfSuccessful: true
    }
}
stage("Ubuntu Yakkety (16.10)") {
    distribution="yakkety"
    node("debian") {
        sh "DISTRIBUTION=$distribution ARCHITECTURE=$architecture MIRRORSITE=$mirrorSite make deb-build"
        archiveArtifacts artifacts: ".deb/$distribution/$architecture/*.deb", onlyIfSuccessful: true
    }
}
stage("Ubuntu Zesty (17.04)") {
    distribution="zesty"
    node("debian") {
        sh "DISTRIBUTION=$distribution ARCHITECTURE=$architecture MIRRORSITE=$mirrorSite make deb-build"
        archiveArtifacts artifacts: ".deb/$distribution/$architecture/*.deb", onlyIfSuccessful: true
    }
}
*/
